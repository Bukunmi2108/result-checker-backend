"""add subjects

Revision ID: ea00727c5b17
Revises: e31251134de7
Create Date: 2024-12-28 12:30:33.047889

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ea00727c5b17'
down_revision: Union[str, None] = 'e31251134de7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subjects',
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('subject_name', sa.VARCHAR(), nullable=False),
    sa.Column('subject_code', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('subject_code')
    )
    op.drop_table('verification_requests')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('verification_requests',
    sa.Column('uid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('exam_centre_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exam_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['exam_centre_no'], ['exam_centres.exam_centre_no'], name='verification_requests_exam_centre_no_fkey'),
    sa.ForeignKeyConstraint(['exam_id'], ['users.exam_id'], name='verification_requests_exam_id_fkey'),
    sa.PrimaryKeyConstraint('uid', name='verification_requests_pkey')
    )
    op.drop_table('subjects')
    # ### end Alembic commands ###
